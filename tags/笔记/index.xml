<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>笔记 on 斑竹坡-程序员</title>
    <link>https://dev960.github.io/tags/%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in 笔记 on 斑竹坡-程序员</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 13 Sep 2023 21:37:56 +0800</lastBuildDate><atom:link href="https://dev960.github.io/tags/%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>《给经理人的第一课》</title>
      <link>https://dev960.github.io/post/%E5%AE%89%E5%BE%B7%E9%B2%81%E6%A0%BC%E9%B2%81%E5%A4%AB%E7%BB%99%E7%BB%8F%E7%90%86%E4%BA%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E8%AF%BE/</link>
      <pubDate>Wed, 13 Sep 2023 21:37:56 +0800</pubDate>
      
      <guid>https://dev960.github.io/post/%E5%AE%89%E5%BE%B7%E9%B2%81%E6%A0%BC%E9%B2%81%E5%A4%AB%E7%BB%99%E7%BB%8F%E7%90%86%E4%BA%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E8%AF%BE/</guid>
      <description>“生产”包含什么？  你必须按预定的时间，可接受的品质以及可能的最低成本，一句顾客的需求制造及运送产品。
 找出决定整个生产流程的“限制步骤”，优化并行。以早餐店举列，限制步骤主要是煮鸡蛋，耗时，那么煮鸡蛋的时候，可以拿面包、烤面包、倒咖啡。
及早发现、及早解决
 所有的生产流程都有一个共通的特性，就是原料在流程中会变得越来越有价值。
生蛋的价值不如煮熟的蛋，搭配好在顾客面前才能实现其价值。因为顾客走进这家餐厅就是要享受它们。
 做项目也是同理，前期需求不明确，越到后期风险越大，最糟心的是重新设计推倒重来。记得新疆某项目，就是前期需求沟通不明确，导致发货以后，需求比预计的多且复杂，还牵涉到第三方运营商，最后烂尾。
我们做软硬件结合的产品，如果没有及早发现设备问题，到客户线程翻车，那是相当尴尬，等于让客户当小白鼠。
我们应该谨守“”及早发现、及早解决“的准则，如此我们便能生产流程中价值最低的阶段修正问题。
因此，我们应该在蛋商送蛋之前让他们把坏的蛋挑出来，而不是让我们的顾客在餐桌上发现它们。
同理，我们采购硬件设备的时候，应该让供应商进行测试，保证设备各零配件都正常工作。如果在”组装“好并发到公司后才发现有毛病，麻烦就大了，因为有可能无法交付给客户，耽误时间。
开发软件，也就是上线之前尽可能的多测试，把bug修复解决，不要到客户现场翻车。
从早餐店的库存谈起  我们不仅要辛勤工作，还得懂得如何工作。
 设定指标
  销售预测
  原料存货
  设备状况
  人力资源
  指标配对
 指标能将你的注意力引导到需要监督的事情上。
   指标清楚的列明了目标
  为评价管理活动提供了相当的客观性
  让在不通组织从事相同管理工作的人有相互比较的依据
  </description>
    </item>
    
    <item>
      <title>Hugo&#43;Github个人笔记部署简易教程</title>
      <link>https://dev960.github.io/post/hugo%E7%AC%94%E8%AE%B0%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Sun, 10 Sep 2023 01:37:56 +0800</pubDate>
      
      <guid>https://dev960.github.io/post/hugo%E7%AC%94%E8%AE%B0%E9%83%A8%E7%BD%B2/</guid>
      <description>hugo笔记部署   sudo apt install hugo -y
  hugo new site dcqwiki
  cd dcqwiki
  git git submodule add https://github.com/olOwOlo/hugo-theme-even/tree/v4.0.0https://github.com/olOwOlo/hugo-theme-even themes/even
  hugo server
  本地访问localhost:1313
  编译：hugo
  github创建仓库
  名字和github名字一样
  勾选publi和Readme
  cd public
  git init -b main
  git remote add origin git@github.com:dev960/dev960.github.io.git
  git pull &amp;ndash;rebase origin main
  git add .</description>
    </item>
    
    <item>
      <title>合宙Esp32&#43;Micropython温湿度传感器</title>
      <link>https://dev960.github.io/post/esp32&#43;micropython%E4%BC%A0%E6%84%9F%E5%99%A8/</link>
      <pubDate>Sun, 10 Sep 2023 01:37:56 +0800</pubDate>
      
      <guid>https://dev960.github.io/post/esp32&#43;micropython%E4%BC%A0%E6%84%9F%E5%99%A8/</guid>
      <description>价格：9.9包邮 温湿度传感器 💡 Tips：GND：接地，VCC:3.3v, DAT:pin4。
 支持温度，湿度。 支持定时刷新温湿度和时间。  OLED显示屏 💡 Tips：GND：接地， VCC:5v, SCL: pin5, SDA: pin4
 支持中英文。 支持定时刷新数据。  超声波HCSR04传感器 💡 Tips：GND:接地， VCC:5v, TRI: pin12, CHO: pin13。
 支持最大400mm  MAX10302心率血氧传感器 💡 Tips：GND:接地， VCC:5v, SCL:pin9, SDA:pin8
 支持血氧，心率，温度  # -*- coding: utf-8 -*- from machine import Pin,Timer,RTC from ssd1306_lib import SSD1306 import gc import math import font import dht11 import utime #import mqtt import utils import time from HCSR04 import HCSR04 from mqtt import mqttClient from wifi_manager import WifiManager hc = HCSR04(trigger_pin=12, echo_pin=13,echo_timeout_us=10000) print(&amp;#34;distance:&amp;#34;,hc.</description>
    </item>
    
  </channel>
</rss>

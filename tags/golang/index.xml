<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on 斑竹坡-程序员</title>
    <link>https://dev960.github.io/tags/golang/</link>
    <description>Recent content in Golang on 斑竹坡-程序员</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 10 Sep 2023 01:37:56 +2000</lastBuildDate><atom:link href="https://dev960.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang大文件发送提速</title>
      <link>https://dev960.github.io/post/golang%E5%B0%86%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%80%E6%AC%A1%E8%AF%BB%E5%85%A5%E5%86%85%E5%AD%98/</link>
      <pubDate>Sun, 10 Sep 2023 01:37:56 +2000</pubDate>
      
      <guid>https://dev960.github.io/post/golang%E5%B0%86%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%80%E6%AC%A1%E8%AF%BB%E5%85%A5%E5%86%85%E5%AD%98/</guid>
      <description>Golang将大文件一次读入内存  利用Slice切片，比每次读取一小块导致频繁Gc
 package main import ( &amp;#34;bufio&amp;#34; &amp;#34;container/list&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;io&amp;#34; &amp;#34;os&amp;#34; &amp;#34;sync&amp;#34; &amp;#34;time&amp;#34; ) func main(){ start := time.Now() content, err := ioutil.ReadFile(&amp;#34;d:\\software\\cn_windows_10_consumer_editions_version_21h1_x64_dvd_1baf479d.iso&amp;#34;) if err != nil { fmt.Println(&amp;#34;file read fail&amp;#34;) } fmt.Printf(&amp;#34;read file len :%d, time cost :%v slices: %d\n&amp;#34;, len(content), time.Since(start), len(content)/(8964*20)) step := 8964 * 20 fmt.Println(len(content)%step, step) for i := 0; i &amp;lt; len(content); i += step { if i+step &amp;gt; len(content) { slice := make([]byte, len(content)%step) copy(slice, content[i:i+len(slice)]) fmt.</description>
    </item>
    
  </channel>
</rss>
